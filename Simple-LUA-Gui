local HttpService = game:GetService("HttpService")

-- GUI Elements
local screenGui = script.Parent
local inputBox = screenGui.Frame.TextBox
local submitButton = screenGui.Frame.TextButton
local responseLabel = screenGui.Frame.TextLabel

-- Your OpenAI API key
local apiKey = "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"

local function sendMessageToAI(prompt)
    local url = "https://api.openai.com/v1/chat/completions"
    
    local headers = {
        ["Content-Type"] = "application/json",
        ["Authorization"] = "Bearer " .. apiKey,
    }
    
    local requestBody = HttpService:JSONEncode({
        model = "gpt-3.5-turbo", -- Use the appropriate model
        messages = {
            {role = "user", content = prompt}
        },
        max_tokens = 50
    })
    
    local success, response = pcall(function()
        return HttpService:PostAsync(url, requestBody, Enum.HttpContentType.ApplicationJson, false, headers)
    end)
    
    if success then
        local responseData = HttpService:JSONDecode(response)
        return responseData.choices[1].message.content
    else
        warn("Failed to get response from OpenAI:", response)
        return "Error getting response from AI."
    end
end

local function onSubmit()
    local userInput = inputBox.Text
    if userInput ~= "" then
        local aiResponse = sendMessageToAI(userInput)
        responseLabel.Text = aiResponse
    end
end

submitButton.MouseButton1Click:Connect(onSubmit)
